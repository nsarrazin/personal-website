/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 Trumpet.glb --transform -t --instance
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { GroupProps } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    trumpet_Circle006: THREE.Mesh
  }
  materials: {
    FFEB3B: THREE.MeshStandardMaterial
  }
}


interface ModelProps extends GroupProps {
  newRef: React.ForwardedRef<THREE.Group>
}

export function Trumpet(props: ModelProps) {
  const { nodes, materials } = useGLTF('/Trumpet-transformed.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null} ref={props.newRef}>
      <mesh geometry={nodes.trumpet_Circle006.geometry} material={materials.FFEB3B} />
    </group>
  )
}

useGLTF.preload('/Trumpet-transformed.glb')
